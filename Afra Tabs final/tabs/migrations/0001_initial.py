# Generated by Django 5.2.6 on 2025-09-23 13:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='artistName', max_length=100)),
                ('name_cleaned', models.CharField(db_column='artistNameCleaned', max_length=100)),
                ('num_tabs', models.IntegerField(db_column='numTabs', default=0)),
                ('artist_img', models.URLField(db_column='artistImage')),
                ('path', models.CharField(blank=True, db_column='path', default='', max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tabber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='tabberName', max_length=100)),
                ('tabber_img', models.URLField(db_column='tabberImage')),
                ('name_cleaned', models.CharField(db_column='tabberNameCleaned', max_length=100)),
                ('youtube', models.URLField(blank=True, db_column='youtube', null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_column='albumTitle', max_length=100)),
                ('title_cleaned', models.CharField(db_column='albumTitleCleaned', max_length=100)),
                ('release_year', models.CharField(db_column='releaseYear', max_length=4)),
                ('album_img', models.URLField(db_column='albumImage')),
                ('num_tabs', models.IntegerField(db_column='numTabs', default=0)),
                ('tuning', models.CharField(blank=True, db_column='tuning', max_length=100, null=True)),
                ('is_complete', models.BooleanField(db_column='isComplete', default=False)),
                ('has_filler', models.BooleanField(db_column='hasFiller', default=False)),
                ('cover_playlist', models.URLField(blank=True, db_column='coverPlaylist')),
                ('path', models.CharField(blank=True, db_column='path', default='', max_length=200)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='tabs.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_column='songTitle', max_length=100)),
                ('title_cleaned', models.CharField(blank=True, db_column='songTitleCleaned', max_length=100)),
                ('duration', models.DurationField(blank=True, db_column='duration', null=True)),
                ('track_num', models.IntegerField(blank=True, db_column='trackNum', null=True)),
                ('tuning', models.CharField(blank=True, db_column='tuning', max_length=100, null=True)),
                ('difficulty', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('riffs', models.IntegerField(db_column='riffs', default=0)),
                ('artist_verified', models.BooleanField(db_column='artistVerified', default=False)),
                ('cover_video', models.URLField(blank=True, db_column='coverVideo')),
                ('was_request', models.BooleanField(db_column='wasRequest', default=False)),
                ('is_filler', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_column='dateAdded')),
                ('date_last_edited', models.DateTimeField(auto_now=True, db_column='dateLastEdited')),
                ('tab_files', models.URLField(blank=True, db_column='tabFiles', null=True)),
                ('tab_description', models.TextField(blank=True, db_column='tabDescription', default='Description not provided', null=True)),
                ('path', models.CharField(blank=True, db_column='path', default='', max_length=200)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='tabs.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='tabs.artist')),
                ('tabber', models.ManyToManyField(blank=True, to='tabs.tabber')),
            ],
            options={
                'ordering': ['artist__name', 'album__title', 'track_num', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SongChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_date', models.DateTimeField(auto_now_add=True)),
                ('change_summary', models.CharField(max_length=500)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changelog', to='tabs.song')),
            ],
            options={
                'ordering': ['-change_date'],
            },
        ),
    ]
